@model IEnumerable<PIAdvisingApp.ViewModels.BondDataVm>


<!-- Bootstrap CSS -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

<!-- Bootstrap JavaScript -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<style>
    .table-container {
        position: relative;
    }

        .table-container thead {
            position: sticky;
            top: 0;
            background-color: #343a40;
            color: #fff;
        }

    #productModal {
        z-index: 9999;
    }
</style>

<!-- Master Section Card -->
<div class="card mb-3">
    <div class="card-header">ADVISE NO. @Model.First().ApiNumber</div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-4">
                <p><strong>Customer Name:</strong> @Model.First().CustomerName</p>
                <p><strong>Retailer Name:</strong> @Model.First().RetailerName</p>
                <p><strong>Advising Bank:</strong> @Model.First().RetailerName</p>
                <p><strong>Representative:</strong> @Model.First().ShortName</p>
                <p><strong>Issued To:</strong> @Model.First().RetailerName</p>
                <p><strong>CM Rep:</strong> @Model.First().RetailerName</p>



            </div>
            <div class="col-md-4">
                <p><strong>Total Value:</strong> @Model.First().TotalValue</p>
                <p><strong>Total Quantity:</strong> @Model.First().TotalQty</p>
                <p><strong>Remarks:</strong> @Model.First().Remarks</p>
                <p><strong>Address:</strong> @Model.First().RetailerName</p>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="companyName"><strong>Company Name:</strong></label>
                    <div class="input-group">
                        <select class="form-control" id="companyName" name="companyName">
                            <option value="">Choose Company</option>
                            <option value="1">KDS Accessories Ltd.</option>
                            <option value="2">KDS Thread Ltd.</option>
                            <option value="3">KDS Poly Industries Ltd.</option>
                            @*<option value="4">Dominox IM</option>*@
                            <option value="5">KDS Accessories Ltd. (Unit 2)</option>
                            <option value="6">KDS Thread Ltd. (Unit 2)</option>
                        </select>
                        <div class="input-group-append">
                            <button class="btn btn-primary" id="setCompanyButton" disabled>Set</button>
                        </div>
                    </div>
                </div>
                <!-- Our Reference text input field -->
                <div class="row mt-3">
                    <div class="col-md-6">
                        <label for="our-reference">Our Reference:</label>
                        <textarea class="form-control" id="our-reference" name="our-reference" rows="3" style="width: 250px; height: 90px; resize: both;">@Model.First().OurRef</textarea>
                    </div>
                    <div class="col-md-6">
                        <label for="customer-reference">Customer Reference:</label>
                        <textarea class="form-control" id="customer-reference" name="customer-reference" rows="3" style="width: 250px; height: 90px; resize: both;">@Model.First().CustomerRef</textarea>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<!-- Include Info Section Card -->
<div class="card mb-3">
    <div class="card-header">Include Info</div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-12">
                <div class="form-check form-check-inline">
                    <input class="form-check-input include-info" type="checkbox" id="check1" data-label="PO">
                    <label class="form-check-label" for="check1">PO</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input include-info" type="checkbox" id="check2" data-label="Style">
                    <label class="form-check-label" for="check2">Style</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input include-info" type="checkbox" id="check3" data-label="Size">
                    <label class="form-check-label" for="check3">Size</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input include-info" type="checkbox" id="check4" data-label="Colour">
                    <label class="form-check-label" for="check4">Colour</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input include-info" type="checkbox" id="check5" data-label="BreakDown1">
                    <label class="form-check-label" for="check5">BreakDown1</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input include-info" type="checkbox" id="check6" data-label="BreakDown2">
                    <label class="form-check-label" for="check6">BreakDown2</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input include-info" type="checkbox" id="check7" data-label="Shade">
                    <label class="form-check-label" for="check7">Shade</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input include-info" type="checkbox" id="check8" data-label="WashType">
                    <label class="form-check-label" for="check8">Wash Type</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input include-info" type="checkbox" id="check9" data-label="GSM">
                    <label class="form-check-label" for="check9">GSM</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input include-info" type="checkbox" id="check10" data-label="KBPNo">
                    <label class="form-check-label" for="check10">KBP No</label>
                </div>
            </div>
        </div>
        <div class="mt-2">
            <button class="btn btn-primary" id="addItemButton">Add</button>
            <button class="btn btn-secondary">Copy</button>
            <button class="btn btn-primary refresh-button">Refresh</button>
        </div>
    </div>
</div>

<!-- Modal -->
<!--<div class="modal fade" id="productModal" tabindex="-1" role="dialog" aria-labelledby="productModalLabel" aria-hidden="true">-->
<!-- Modal content as you provided -->
<!--</div>-->
<!-- Hidden Window -->
<!-- Hidden Window -->
<div class="hidden-window" style="display: none;">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="productModalLabel">Product Information</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="container">
                    <div class="row">
                        <div class="col-md-3">
                            <!-- First Column -->
                            <div class="form-group">
                                <label for="productName">Product Name</label>
                                @if (ViewBag.ProductNameList != null)
                                {
                                    <select class="form-control select2" id="productId" name="productId">
                                        <option value="">Select Product</option>
                                        @foreach (var item in ViewBag.ProductNameList)
                                        {
                                            <option value="@item.ProductId">@item.ProductName</option>
                                        }
                                    </select>
                                }
                            </div>
                            <div class="form-group">
                                <label for="combination">Combination</label>
                                <select class="form-control select2" id="combinationId" name="combinationId">
                                    <option value="">Select combination</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="ply">Ply</label>
                                <input type="text" class="form-control" id="ply">
                            </div>
                            <div class="form-group">
                                <label for="shadeNumber">Shade Number</label>
                                <input type="text" class="form-control" id="shadeNumber">
                            </div>
                            <div class="form-group">
                                <label for="measureUnit">Measure Unit</label>
                                <input type="text" class="form-control" id="measureUnit">
                            </div>
                            <div class="form-group">
                                <label for="washType">Wash Type</label>
                                <input type="text" class="form-control" id="washType">
                            </div>
                        </div>
                        <div class="col-md-3">
                            <!-- Second Column -->
                            <div class="form-group">
                                <label for="length">Length</label>
                                <input type="text" class="form-control" id="length">
                            </div>
                            <div class="form-group">
                                <label for="width">Width</label>
                                <input type="text" class="form-control" id="width">
                            </div>
                            <div class="form-group">
                                <label for="height">Height</label>
                                <input type="text" class="form-control" id="height">
                            </div>
                            <div class="form-group">
                                <label for="gastLength">Gast. Length</label>
                                <input type="text" class="form-control" id="gastLength">
                            </div>
                            <div class="form-group">
                                <label for="gastWidthL">Gast. Width (L)</label>
                                <input type="text" class="form-control" id="gastWidthL">
                            </div>
                            <div class="form-group">
                                <label for="gastWidthR">Gast. Width (R)</label>
                                <input type="text" class="form-control" id="gastWidthR">
                            </div>
                        </div>
                        <div class="col-md-3">
                            <!-- Third Column -->
                            <div class="form-group">
                                <label for="printed">Printed</label>
                                <input type="text" class="form-control" id="printed">
                            </div>
                            <div class="form-group">
                                <label for="perforated">Perforated</label>
                                <input type="text" class="form-control" id="perforated">
                            </div>
                            <div class="form-group">
                                <label for="quantityUnit">Quantity Unit</label>
                                <input type="text" class="form-control" id="quantityUnit">
                            </div>
                            <div class="form-group">
                                <label for="quantity">Quantity</label>
                                <input type="text" class="form-control" id="quantity">
                            </div>
                            <div class="form-group">
                                <label for="unitPrice">Unit Price</label>
                                <input type="text" class="form-control" id="unitPrice">
                            </div>
                            <div class="form-group">
                                <label for="totalAmount">Total Amount</label>
                                <input type="text" class="form-control" id="totalAmount">
                            </div>
                        </div>
                        <div class="col-md-3">
                            <!-- Fourth Column -->
                            <div class="form-group">
                                <label for="printed">GSM</label>
                                <input type="text" class="form-control" id="printed">
                            </div>
                            <div class="form-group">
                                <label for="perforated">PO Number</label>
                                <input type="text" class="form-control" id="perforated">
                            </div>
                            <div class="form-group">
                                <label for="quantityUnit">Style Ref</label>
                                <input type="text" class="form-control" id="quantityUnit">
                            </div>
                            <div class="form-group">
                                <label for="quantity">Color</label>
                                <input type="text" class="form-control" id="quantity">
                            </div>
                            <div class="form-group">
                                <label for="unitPrice">Size</label>
                                <input type="text" class="form-control" id="unitPrice">
                            </div>
                            <div class="form-group">
                                <label for="totalAmount">Break Down 1</label>
                                <input type="text" class="form-control" id="totalAmount">
                            </div>
                            <div class="form-group">
                                <label for="totalAmount">Break Down 2</label>
                                <input type="text" class="form-control" id="totalAmount">
                            </div>
                            <div class="form-group">
                                <label for="totalAmount">Weight (KG)</label>
                                <input type="text" class="form-control" id="totalAmount">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">CANCEL</button>
                <button type="button" class="btn btn-primary" id="saveProduct">OK</button>
            </div>
        </div>
    </div>
</div>




<!-- Table Section -->
<div class="card">
    <div class="card-body">
        <div class="table-container" style="max-height: calc(80vh - 250px); overflow-y: auto;">
            <table class="table mt-3 table-bordered">
                <thead class="thead-dark">
                    <tr>
                        <th class="text-center d-none">Api No.</th>
                        <th class="text-center">Product Name</th>
                        <th class="text-center">Measurement</th>
                        <th class="text-center">Measure Unit</th>
                        <th class="text-center">Booking Qty</th>
                        <th class="text-center">Qty In KG</th>
                        <th class="text-center">Quantity Unit</th>
                        <th class="text-center">Unit Price</th>
                        <th class="text-center">Value</th>
                        <th class="text-center">PO Number</th>
                        <th class="text-center">Style Ref</th>
                        <th class="text-center">Color</th>
                        <th class="text-center">BreakDown1</th>
                        <th class="text-center">BreakDown2</th>
                        <th class="text-center">Shade Number</th>
                        <th class="text-center">Wash Type</th>
                        <th class="text-center">GSM</th>


                        <!-- ... Include Info columns if needed ... -->

                    </tr>
                </thead>
                <tbody>
                    @{

                        var groupedData = Model.GroupBy(x => new
                        {
                            x.ProductName,
                            x.Measurement,
                            x.MeasureUnit,
                            x.QuantityUnit,
                            x.UnitPrice,
                            x.ApiNumber
                        })
                                               .Select(g => new
                                               {
                                                   ProductName = g.Key.ProductName,
                                                   ApiNumber = g.Key.ApiNumber,
                                                   PONumber = string.Join(",", g.Select(x => x.PONumber).Distinct()), // Merge PO Numbers
                                                   StyleRef = string.Join(",", g.Select(x => x.StyleRef).Distinct()), // Merge Style Refs
                                                   Color = string.Join(",", g.Select(x => x.Color).Distinct()), // Merge Colors
                                                   BreakDown1 = string.Join(",", g.Select(x => x.BreakDown1).Distinct()), // Merge BreakDown1s
                                                   BreakDown2 = string.Join(",", g.Select(x => x.BreakDown2).Distinct()), // Merge BreakDown2s
                                                   ShadeNumber = string.Join(",", g.Select(x => x.ShadeNumber).Distinct()), // Merge Shade Numbers
                                                   WashType = string.Join(",", g.Select(x => x.WashType).Distinct()), // Merge Wash Types
                                                   GSM = string.Join(",", g.Select(x => x.GSM).Distinct()), // Merge GSMs
                                                   Measurement = g.Key.Measurement,
                                                   MeasureUnit = g.Key.MeasureUnit,
                                                   BookingQty = g.Sum(x => x.BookingQty),
                                                   QtyInKG = g.Sum(x => x.QtyInKG),
                                                   QuantityUnit = g.Key.QuantityUnit,
                                                   UnitPrice = g.Key.UnitPrice,
                                                   Val2 = g.Sum(x => x.Val2),

                                                   // Add other properties ...
                                               });


                        var totalBookingQty = groupedData.Sum(g => g.BookingQty);
                        var totalQtyInKG = groupedData.Sum(g => g.QtyInKG);
                        var totalValue = groupedData.Sum(g => g.Val2);
                    }

                    @foreach (var item in groupedData)
                    {
                        <tr>
                            <td class="text-center d-none">@item.ApiNumber</td>
                            <td class="text-center">@item.ProductName</td>
                            <td class="text-center">@item.Measurement</td>
                            <td class="text-center">@item.MeasureUnit</td>
                            <td class="text-center">@item.BookingQty</td>
                            <td class="text-center">@item.QtyInKG</td>
                            <td class="text-center">@item.QuantityUnit</td>
                            <td class="text-center">@item.UnitPrice</td>
                            <td class="text-center">@item.Val2</td>
                            <td class="text-center">@item.PONumber</td>
                            <td class="text-center">@item.StyleRef</td>
                            <td class="text-center">@item.Color</td>
                            <td class="text-center">@item.BreakDown1</td>
                            <td class="text-center">@item.BreakDown2</td>
                            <td class="text-center">@item.ShadeNumber</td>
                            <td class="text-center">@item.WashType</td>
                            <td class="text-center">@item.GSM</td>



                        </tr>
                    }
                </tbody>
            </table>
        </div>

    </div>
</div>

<!-- Total Footer -->
<div class="card mt-3">
    <div class="card-body">
        <table class="table table-bordered mb-0">
            <tfoot class="thead-dark">
                <tr>
                    @*<td colspan="3" class="text-center"><strong>Totals:</strong></td>
                        <td class="text-center">@totalBookingQty</td>
                        <td class="text-center"><strong>Total Qty (KG):</strong>@totalQtyInKG</td>*@
                    <td colspan="3" class="text-center"><strong>Total Booking Quantity:</strong> @totalBookingQty</td>
                    <td colspan="3" class="text-center"><strong>Total Quantity (KG):</strong> @totalQtyInKG</td>
                    <td colspan="3" class="text-center"><strong>Total Value:</strong> @totalValue</td>
                    <td></td>
                </tr>
            </tfoot>
        </table>
    </div>
</div>


<div class="modal-footer">
    <button type="button" class="btn btn-primary" id="saveButton" disabled>Save</button>
    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
</div>

@*<div id="product-modal-container"></div>*@







<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
        $(document).ready(function () {
            let selectedCompanyId = null;

            // Handle company name dropdown change event
            $('#companyName').change(function () {
                selectedCompanyId = $(this).val();
                const isCompanySelected = !!selectedCompanyId;
                $('#setCompanyButton').prop('disabled', !isCompanySelected);
                $('#saveButton').prop('disabled', !isCompanySelected);
            });

            // Handle Set button click event
            $('#setCompanyButton').click(function () {
                // If you want to do something when the Set button is clicked,
                // you can perform additional actions here.
                // For example, you can update the UI to reflect the selected company.
            });
             // Function to toggle column visibility based on checkbox state
        function toggleColumn(columnIndex, visible) {
            $('table tr').each(function () {
                $(this).find('td, th').eq(columnIndex).toggle(visible);
            });
        }

        // Function to bind checkbox change event
        function bindCheckboxEvent(checkboxId, columnIndex) {
            // Get the checkbox element
            var checkbox = $('#' + checkboxId);

            // Get the initial state of the checkbox (checked or unchecked)
            var isChecked = checkbox.prop('checked');

            // Hide or show the corresponding column based on the initial checkbox state
            toggleColumn(columnIndex, isChecked);

            // Bind change event to the checkbox
            checkbox.on('change', function () {
                var isVisible = $(this).prop('checked');
                toggleColumn(columnIndex, isVisible);
            });
        }

        // Bind checkboxes to their respective columns
        $(document).ready(function () {
            bindCheckboxEvent('check1', 9);  // PO Number, 8th column
            bindCheckboxEvent('check2', 10);  // Style Ref, 9th column
            bindCheckboxEvent('check4', 11); // Color, 10th column
            bindCheckboxEvent('check5', 12); // BreakDown1, 11th column
            bindCheckboxEvent('check6', 13); // BreakDown2, 12th column
            bindCheckboxEvent('check7', 14); // Shade Number, 13th column
            bindCheckboxEvent('check8', 15); // Wash Type, 14th column
            bindCheckboxEvent('check9', 16); // GSM, 15th column
        });
 $('#addItemButton').click(function () {
            // Show the hidden window when the Add button is clicked
            $('.hidden-window').show();
        });

        // Handle the click event of the OK button inside the hidden window
        $(document).on('click', '#saveProduct', function () {
            // Do something with the data entered in the hidden window, e.g., save it or update the main view
            // You can access the input fields in the hidden window and get their values like this:
            var productName = $('#productName').val();
            var gsm = $('#gsm').val();
            // ... and so on for other input fields

            // You can also add the data to the table on the main view, similar to how you are adding data from the model
            // For example:
            $('table tbody').append('<tr><td class="text-center">' + productName + '</td><td class="text-center">...</td></tr>');

            // Hide the hidden window after handling the data
            $('.hidden-window').hide();
        });

        // Handle the click event of the CANCEL button inside the hidden window
        $(document).on('click', '.hidden-window .btn-secondary', function () {
            // Hide the hidden window when the CANCEL button is clicked
            $('.hidden-window').hide();
        });
            // Handle Save button click event
        $('#saveButton').click(function () {
            const isConfirmed = confirm("Are you sure you want to save?");
            if (isConfirmed) {

                // Get the current date and time
                let currentDate = new Date();

                // Format the date as "YYYY-MM-DD HH:mm:ss"
                let formattedDate = currentDate.toISOString().slice(0, 19).replace('T', ' ');

                let masterData = {
                    ApiNumber: '@Model.First().ApiNumber', // Use Razor syntax to fetch API number from the view model
                    SubmittedDate: formattedDate, // Use Razor syntax to fetch the submitted date from the view model
                    CustomerName: '@Model.First().CustomerName',
                        RetailerName: '@Model.First().RetailerName',
                        Remarks: '@Model.First().Remarks',
                        TotalValue: '@Model.First().TotalValue',
                        TotalQuantity: '@Model.First().TotalQty',
                    CompanyName: $('#companyName').val(),
                    Details : []
                    // Add other master data properties here
                };
                console.log("Master Data:", masterData); // Log the masterData object


                let subData = [];
                $('table tbody tr').each(function () {
                    let $row = $(this);
                    let rowData = {
                        ApiNumber: $row.find('td:eq(0)').text().trim(),
                        ////  BookingNo: $row.find('td:eq(1)').text().trim(),
                        ////  CategoryName: $row.find('td:eq(2)').text().trim(),
                        //  ProductName: $row.find('td:eq(3)').text().trim(),
                        //  Measurement: $row.find('td:eq(4)').text().trim(),
                        //  MeasureUnit: $row.find('td:eq(5)').text().trim(),
                        //  UnitPrice: $row.find('td:eq(6)').text().trim(),
                        //  BookingQty: $row.find('td:eq(7)').text().trim(),
                        //  QuantityUnit: $row.find('td:eq(8)').text().trim(),
                        //  Val2: $row.find('td:eq(9)').text().trim(),
                        //  BondRemarks: $row.find('td.customer-spec-text').text().trim(),
                            ProductName: $row.find('td:eq(1)').text().trim(),
                            Measurement: $row.find('td:eq(2)').text().trim(),
                            MeasureUnit: $row.find('td:eq(3)').text().trim(),
                            BookingQty: parseFloat($row.find('td:eq(4)').text().trim()) || 0,
                            QtyInKG: parseFloat($row.find('td:eq(5)').text().trim()) || 0,
                            QuantityUnit: $row.find('td:eq(6)').text().trim(),
                            UnitPrice: parseFloat($row.find('td:eq(7)').text().trim()) || 0,
                            Val2: parseFloat($row.find('td:eq(8)').text().trim()) || 0,
                            PONumber: $row.find('td:eq(9)').text().trim(),
                            StyleRef: $row.find('td:eq(10)').text().trim(),
                            Color: $row.find('td:eq(11)').text().trim(),
                            BreakDown1: $row.find('td:eq(12)').text().trim(),
                            BreakDown2: $row.find('td:eq(13)').text().trim(),
                            ShadeNumber: $row.find('td:eq(14)').text().trim(),
                            WashType: $row.find('td:eq(15)').text().trim(),
                            GSM: $row.find('td:eq(16)').text().trim(),
                            OurRef: $('#our-reference').val(),
                            CustomerRef: $('#customer-reference').val(),
                            BondRemarks :""
                            // BondRemarks: $row.find('td.customer-spec-text').text().trim(),
                    };
                    subData.push(rowData);
                });
                masterData.Details = subData;
                console.log("Master Data:", masterData); // Log the masterData object
                console.log("Sub Data:", subData); // Log the subData array



                // Call the API to save master data
                $.post("@Url.Action("SaveApiFromBond", "Bonds")", masterData, function (response) {
                    // Handle success response
                    console.log("Master data saved successfully!");
                }).fail(function (error) {
                    // Handle error response
                    console.error("Error saving master data: ", error);
                });

                // Call the API to save sub details data
                $.post("@Url.Action("SaveApiFromBondSub", "Bonds")", { subData: JSON.stringify(subData) }, function (response) {
                    // Handle success response
                    console.log("Sub details data saved successfully!");
                }).fail(function (error) {
                    // Handle error response
                    console.error("Error saving sub details data: ", error);
                });

                alert("Data saved successfully!"); // You can remove this alert after integrating the API calls.
            }
        });
        });
        $('#productId').change(function () {
            $.post("@Url.Action("GetCombination", "Bonds")", { productId: $(this).val() }, function (response) {
                // Handle success response
                console.log(response);
                if (response) {
                    $('#combinationId').empty();
                    let options = '<option value ="">Select</option>';
                    $(response).each(function () {
                        options += '<option value ="' + this.CombinationDetails + '">' + this.CombinationDetails + '</option>';
                    })
                    $('#combinationId').append(options);
                }
            }).fail(function (error) {
                // Handle error response
                console.error("Error saving master data: ", error);
            });
        });
</script>