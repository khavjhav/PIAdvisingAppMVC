@model IEnumerable<PIAdvisingApp.ViewModels.PiAdvisingBondViewModel>

<div class="modal-content">

    @*<div id="loading-animation" class="text-center">
        <div class="spinner-border" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>*@

    <div class="modal-header">
        <h5 class="modal-title">CM Approval For Rep. </h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>

    @{
        var CustomerName = ""; // Initialize the customer name variable
        var ProductName = ""; // Initialize the product name variable
        var ShortName = "";
        var RetailerName = "";
        var IssuerName = "";
        var CompanyName = "";
        var ApiNumber = "";

        if (Model.Any())
        {
            // Assuming the customer name and product name are available in the first item of the Model collection
            var firstItem = Model.First();
            CustomerName = firstItem.CustomerName;
            ProductName = firstItem.ProductName;
            ShortName = firstItem.ShortName;
            IssuerName = firstItem.IssuerName;
            RetailerName = firstItem.RetailerName;
            CompanyName = firstItem.CompanyName;
            ApiNumber = firstItem.ApiNumber;
        }
    }

    <div class="modal-body" id="cm-api-modal-body">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="customerName">Customer Name</label>
                    <input type="text" class="form-control" id="customerName" name="customerName" value="@CustomerName" readonly />
                </div>
                <div class="form-group">
                    <label for="retailerName">Retailer Name</label>
                    <input type="text" class="form-control" id="retailerName" name="retailerName" value="@RetailerName" readonly />
                </div>
                <div class="form-group">
                    <label for="representativeName">Sales Rep. Name</label>
                    <input type="text" class="form-control" id="representativeName" name="representativeName" value="@ShortName" readonly />
                </div>
                <div class="form-group">
                    <label for="companyName">Company Name</label>
                    <input type="text" class="form-control" id="companyName" name="companyName" value="@CompanyName" readonly />
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label for="issuerName">Issuer Name</label>
                    <input type="text" class="form-control" id="issuerName" name="issuerName" value="@IssuerName" readonly />
                </div>
                <div class="form-group">
                    <label for="productCategory">Product Category</label>
                    <select class="form-control" id="productCategory" name="productCategory">
                        <option value="">Select Category</option>
                        @foreach (var item in Model.Select(x => x.CategoryName).Distinct())
                        {
                            <option value="@item">@item</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label for="productName">Product Name</label>
                    <select class="form-control" id="productName" name="productName">
                        <option value="">Select Product</option>
                        @foreach (var item in Model.Select(x => x.ProductName).Distinct())
                        {
                            <option value="@item">@item</option>
                        }
                    </select>
                </div>
                @*<div class="form-group">
            <label for="productName">Clause Name</label>
            <select class="form-control" id="clauseName" name="clauseName">
                <option value="">Select Product</option>
                @foreach (var item in ViewBag.ClauseModels)
                {
                    <option value="@item.ClauseName">@item.ClauseName</option>
                }
            </select>
        </div>*@

                <div class="form-group">
                    <label for="clauseName">Clause Name</label>
                    <select class="form-control select2" id="clauseName" name="clauseName">
                        <option value="">Select Product</option>
                        @foreach (var item in ViewBag.ClauseModels)
                        {
                            <option value="@item.ClauseName">@item.ClauseName</option>
                        }
                    </select>
                </div>



            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th>BookingNo</th>

                        <th>CategoryName</th>
                        <th>ProductName</th>
                        <th>BondName</th>
                        <th>InvoiceQty</th>
                        <th>QuantityUnit</th>
                        <th>Measurement</th>
                        <th>MeasureUnit</th>
                        @*<th>HSCode</th>*@

                        @*<th>CustomerName</th>*@
                    </tr>
                </thead>
                <tbody id="cm-api-modal-tbody">
                    @foreach (var item in Model.GroupBy(x => new { x.BookingNo, x.CategoryName, x.ProductName, x.BondName, x.InvoiceQty, x.QuantityUnit, x.Measurement, x.MeasureUnit, x.HSCode }).Select(g => g.First()))
                    {
                        <tr data-category="@item.CategoryName">
                            <td>@item.BookingNo</td>
                            <td>@item.CategoryName</td>
                            <td>
                                <input type="text" class="form-control form-control-sm ProductName" name="name" value="@item.ProductName" />
                            </td>
                            <td>
                                <input type="text" class="form-control form-control-sm BondName" name="name" value="@item.BondName" />
                            </td>
                            <td>
                                <input type="text" class="form-control form-control-sm InvoiceQty" name="name" value="@item.InvoiceQty" />
                            </td>
                            <td>
                                <input type="text" class="form-control form-control-sm QuantityUnit" name="name" value="@item.QuantityUnit" />
                            </td>
                            <td>
                                <input type="text" class="form-control form-control-sm Measurement" name="name" value="@item.Measurement" />
                            </td>
                            <td>
                                <input type="text" class="form-control form-control-sm MeasureUnit" name="name" value="@item.MeasureUnit" />
                            </td>
                            @*<td>
                                    <input type="text" class="form-control form-control-sm" name="name" value="@item.HSCode" />
                                </td>*@
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    @*<div class="modal-footer">
            <button type="button" class="btn btn-primary">Save Changes</button>
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        </div>*@

    <div class="modal-footer">
        @*<button type="button" class="btn btn-primary" id="submitButton">Save Changes</button>
        *@
        <button type="button" class="btn btn-primary" id="submitButton" data-api-number="@ApiNumber">Save Changes</button>

        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
    </div>

</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>


@section Scripts {
    <script>
    $(document).ready(function () {
        // Hide the modal content initially
        $("#modal-content-wrapper").hide();

        //// Show loading animation
        //$("#loading-animation").show();

        //// Simulate delay for demonstration purposes
        //setTimeout(function () {
        //    // Hide loading animation
        //    $("#loading-animation").hide();

        //    // Show the modal content
        //    $("#modal-content-wrapper").show();
        //}, 2000); // Adjust the delay duration as needed

        // Event listener for product category dropdown change
        $('#productCategory').change(function () {
            var selectedCategory = $(this).val(); // Get the selected category value

            // Show all rows if no category is selected
            if (selectedCategory === '') {
                $('#productTableBody tr').show();
            } else {
                // Hide rows that do not matchthe selected category
                $('#productTableBody tr').hide();
                $('#productTableBody tr[data-category="' + selectedCategory + '"]').show();
            }
        });

        // Event listener for product name dropdown change
        $('#productName').change(function () {
            var selectedProduct = $(this).val(); // Get the selected product value

            // Show all rows if no product is selected
            if (selectedProduct === '') {
                $('#productTableBody tr').show();
            } else {
                // Hide rows that do not match the selected product
                $('#productTableBody tr').hide();
                $('.productNameInput').each(function () {
                    var productValue = $(this).val();
                    if (productValue === selectedProduct) {
                        $(this).closest('tr').show();
                    }
                });
            }
        });
        // Initialize select2 on the "Clause Name" dropdown
        $('#clauseName').select2({
            placeholder: 'Select Product',
            allowClear: true,
            width: '100%'
        });



        @*// Event listener for submit button click
        $('#submitButton').click(function () {
           // var piNo = 'API123'; // Replace with the actual API number
            let customerName = $("#customerName").val();
            let retailerName = $("#retailerName").val();
            let representativeName = $("#representativeName").val();
            let companyName = $("#companyName").val();
            let details = [];
            $("#cm-api-modal-tbody tr").each(function (data) {
                console.log($(this))
            });

            // Send the notification request
            $.ajax({
                url: "@Url.Action("SaveCmApi", "Sales")", // Replace with the actual endpoint to send the notification
                method: 'POST',
                data: {
                    piNo: piNo,
                  /*  name: name*/
                },
                success: function (response) {
                    // Handle the success response, e.g., display a success message
                    alert('PI Approval request received (' + piNo + ') from ' + "User";
                },
                error: function (error) {
                    // Handle the error response, e.g., display an error message
                    console.error('Error sending notification:', error);
                }
            });
        });*@

        $('#submitButton').click(function () {
        // Collect data from the table
        var customerName = $('#customerName').val();
        var retailerName = $('#retailerName').val();
        var representativeName = $('#representativeName').val();
        var companyName = $('#companyName').val();
        var productData = [];

        // Iterate over each table row in the tbody
        $('#cm-api-modal-tbody tr').each(function () {
          var bookingNo = $(this).find('td:nth-child(1)').text();
          var categoryName = $(this).find('td:nth-child(2)').text();
          var productName = $(this).find('.ProductName').val();
          var bondName = $(this).find('.BondName').val();
          var invoiceQty = $(this).find('.InvoiceQty').val();
          var quantityUnit = $(this).find('.QuantityUnit').val();
          var measurement = $(this).find('.Measurement').val();
          var measureUnit = $(this).find('.MeasureUnit').val();

          var rowData = {
            BookingNo: bookingNo,
            CategoryName: categoryName,
            ProductName: productName,
            BondName: bondName,
            InvoiceQty: invoiceQty,
            QuantityUnit: quantityUnit,
            Measurement: measurement,
            MeasureUnit: measureUnit
          };

          productData.push(rowData);
        });

        // Create the data object to send to the server
        var formData = {
          CustomerName: customerName,
          RetailerName: retailerName,
          RepresentativeName: representativeName,
          CompanyName: companyName,
          Details: productData
        };

        // Send the data to the server
        $.ajax({
          url: '@Url.Action("SaveCmApi", "Sales")',
          method: 'POST',
          data: formData,
          success: function (response) {
            // Handle the success response
            console.log('Data saved successfully:', response);
          },
          error: function (error) {
            // Handle the error response
            console.error('Error saving data:', error);
          }
        });
      });

    });
    </script>
}