@model IEnumerable<PIAdvisingApp.ViewModels.PrcRptLcNotReceived>

<link href="https://unpkg.com/ag-grid-community/dist/styles/ag-grid.css" rel="stylesheet" />
<link href="https://unpkg.com/ag-grid-community/dist/styles/ag-theme-alpine.css" rel="stylesheet" />

<div class="col-md-6">
    <h2 class="d-flex justify-content-between align-items-center">
        <span>Added Bookings</span>
        <span class="text-right" style="font-size: 18px;">Total Value: <span id="total-value"></span></span>
    </h2>
    <div class="main-card mb-6 card">
        <div class="card-body">
            <div id="added-grid" style="height: 400px;"></div>
            <button type="button" id="submit-btn" class="btn btn-primary">Submit</button>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/ag-grid-community@26.2.0/dist/ag-grid-community.min.js"></script>

    <script>
        $(document).ready(function () {
            var apiDataList = [];
            function updateTotalValue() {
                var totalValue = 0.00;
                $(apiDataList).each(function () {
                    totalValue += Number(this.DelValue);
                });
                $('#total-value').html(totalValue.toFixed(2));
                console.log('totalValue', totalValue);
            }

            // Configure ag-Grid
            var columnDefs = [
                { headerName: 'SL', field: 'SL', width: 70 },
                { headerName: 'Booking No.', field: 'BookingNo', width: 200 },
                { headerName: 'Booking Date', field: 'BookingDate', width: 200 },
                { headerName: 'Invoice Qty', field: 'InvoiceQty', width: 150 },
                { headerName: 'Invoice Value', field: 'InvoiceValue', width: 150 },
            ];

            var gridOptions = {
                columnDefs: columnDefs,
                rowData: [],
                defaultColDef: {
                    resizable: true,
                    sortable: true,
                },
                rowSelection: 'multiple',
                onSelectionChanged: function () {
                    var selectedRows = gridOptions.api.getSelectedRows();
                    apiDataList = selectedRows.map(function (row) {
                        return {
                            'BookingNo': row.BookingNo,
                            'InvoiceQty': Number(row.InvoiceQty),
                            'DelValue': row.InvoiceValue
                        };
                    });
                    updateTotalValue();
                },
            };

            // Create ag-Grid
            new agGrid.Grid(document.querySelector('#added-grid'), gridOptions);

            $('#submit-btn').on('click', function () {
                // Perform submit action
                // ...
            });

            // Populate ag-Grid with data
            var rowData = [];
            var rowNo = 1;
            @foreach (var item in Model)
            {
                <text>rowData.push({</text>
                    <text>'SL': '@rowNo',</text>
                    <text>'BookingNo': '@item.BookingNo',</text>
                    <text>'BookingDate': '@item.BookingDate.ToString("d-MMM-yyyy")',</text>
                    <text>'InvoiceQty': '@item.InvoiceQty',</text>
                    <text>'InvoiceValue': '@item.InvoiceValue',</text>
                <text>});</text>
                <text>rowNo++;</text>
            }
            gridOptions.api.setRowData(rowData);
        });
    </script>
}
