@model IEnumerable<PIAdvisingApp.ViewModels.PrcRptLcNotReceived>
@section Css {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.21/css/dataTables.bootstrap4.min.css">
    <link href="https://unpkg.com/gijgo@1.9.13/css/gijgo.min.css" rel="stylesheet" type="text/css" />
    <link href="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css" rel="stylesheet" />

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.10/css/select2.min.css" />

    <style>
        .tbody, td, th {
            padding: 2px !important;
            font-size: 11px !important;
        }

        .modal-backdrop {
            z-index: 10 !important
        }

        #added-table {
            height: 800px; /* set the desired height */
            overflow-y: scroll; /* add vertical scrollbar */
        }

    </style>
}
<div class="app-page-title">
    <div class="page-title-wrapper">
        <div class="page-title-heading">
            <div>
                Advise PI Update
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">

    <div class="row">
        <div class="col-md-6">
            <h2>Existing Bookings</h2>
            <div class="main-card mb-6 card">
                <div class="card-body">

                    @using (Html.BeginForm("LcNotReceived", "Sales", FormMethod.Get))
                    {
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group row">
                                    <label for="customerName" class="col-sm-2 col-form-label">Customer Name:</label>
                                    <div class="col-sm-4">
                                        <input type="text" id="customerName" class="form-control" />
                                    </div>
                                    <label for="retailerName" class="col-sm-2 col-form-label">Retailer Name:</label>
                                    <div class="col-sm-4">
                                        @Html.TextBox("retailerName", null, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="representativeName" class="col-sm-2 col-form-label">Category Name:</label>
                                    <div class="col-sm-4">
                                        @Html.TextBox("categoryName", null, new { @class = "form-control" })
                                    </div>
                                    <div class="col-sm-6">
                                        <input type="submit" value="Submit" class="btn btn-primary" />
                                    </div>
                                </div>
                                <div>
                                    <label for="rep-filter">Filter by Rep Name:</label>
                                    <select class="form-control" id="rep-filter">
                                        <option value="">All</option>
                                        @foreach (var rep in Model.Select(m => m.RepresentativeName).Distinct())
                                        {
                                            <option value="@rep">@rep</option>
                                        }
                                    </select>
                                </div>

                            </div>
                        </div>
                    }
                    <div class="table-responsive">
                        <div>
                            <button id="select-all-btn">Select All</button>
                            <button id="clear-all-btn">Clear All</button>
                        </div>
                        <table id="datatable" class="mb-0 table table-bordered table-hover">
                            <thead class="th-top">
                                <tr>
                                    <th>SL</th>
                                    <th>Select</th>
                                    <th class="text-center">Booking No</th>
                                    <th class="text-center">Booking Date</th>
                                    <th class="text-center">Representative Name</th>
                                    <th class="text-center">Customer Name</th>
                                    <th class="text-center">Category Name</th>
                                    <th class="text-center">Booking Qty</th>
                                    <th class="text-center">Booking Value</th>
                                    <th class="text-center">Invoice Qty</th>
                                    <th class="text-center">Invoice Value</th>
                                    @*<th class="text-center">LC Rcv Value</th>*@
                                    <th class="text-center">LC Balance</th>
                                    @*<th class="text-center">PI Status</th>*@
                                    <th class="text-center">Retailer Name</th>
                                    <th class="text-center">Delivery (%)</th>
                                    <th class="text-center">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{ int rowNo = 1;}
                                @foreach (var item in Model)
                                {
                                    <tr data-invoice-value="@item.DelValue.ToString("0.00")">
                                        <input type="hidden" class="BookingNo" name="BookingNo" value="@item.BookingNo" />
                                        <input type="hidden" class="InvoiceQty" name="InvoiceQty" value="@item.InvoiceQty" />
                                        <input type="hidden" class="DelValue" name="DelValue" value="@item.DelValue" />
                                        <td class="text-left td-green"><b>@rowNo</b></td>
                                        <td class="text-center td-green">
                                            <input type="checkbox" class="selected" data-booking-no="@item.BookingNo" value="" />
                                        </td>
                                        <td class="text-left td-green">@item.BookingNo</td>
                                        <td class="text-left td-green">@item.BookingDate.ToString("d-MMM-yyyy")</td>
                                        <td class="repName" style="display:none">@item.RepresentativeName</td>
                                        <td class="text-left td-green">@item.CustomerName</td>
                                        <td class="text-left td-green">@item.CategoryName</td>
                                        <td class="text-left t  d-green">@item.BookingQty</td>
                                        @MyHelpers.FinancialNumberRoundedTd(item.BookingValue, "td-green")
                                        <td class="text-left td-green">@item.InvoiceQty</td>
                                        @MyHelpers.FinancialNumberRoundedTd(item.DelValue, "td-green")


                                        @*@MyHelpers.FinancialNumberRoundedTd(item.LCrcvValue, "td-green")*@
                                        @MyHelpers.FinancialNumberRoundedTd(item.LCBalance, "td-green")
                                        @*<td class="text-left td-green">@item.ISPISEND</td>*@
                                        <td class="text-left td-green">@item.RetailerName</td>
                                        @MyHelpers.FinancialNumberTd(item.DlvPer, "td-pink", "", "%")
                                        <td class="td-yellow"></td>
                                    </tr>
                                    rowNo++;
                                }

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <h2 class="d-flex justify-content-between align-items-center">
                <span>Added Bookings</span>

                <span id="totalInvoiceValue">0.00</span>
            </h2>
            <div class="main-card mb-6 card">
                <div class="card-body">
                    @*<form id="added-bookings-form" method="post" action="@Url.Action("SaveApiData", "Sales")">*@
                    <table class="mb-0 table table-bordered table-hover" id="added-table">
                        <thead>
                            <tr>
                                <th>SL</th>
                                <th class="text-center">Booking No.</th>
                                <th class="text-center">Booking Date</th>
                                <th class="text-center">Invoice Qty</th>
                                <th class="text-center">Invoice Value</th>
                            </tr>

                        </thead>
                        <tbody>
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="3"></td>
                                <td><b id="total-value-footer"></b></td>
                                <td></td>
                            </tr>
                        </tfoot>
                    </table>
                    <button type="button" id="submit-btn" class="btn btn-primary">Submit</button>
                    @*</form>*@
                </div>
            </div>
        </div>
    </div>
</div>

@section Modal {
    <div class="modal fade pi-advise-modal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" style="display: none;">
        <div class="modal-dialog modal-xl">
            <div class="modal-content pi-modal-content">
            </div>
        </div>
    </div>
}
@section Scripts {
    <script src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.21/js/dataTables.bootstrap4.min.js"></script>
    <script src="https://unpkg.com/gijgo@1.9.13/js/gijgo.min.js" type="text/javascript"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>

    <script>
        $(document).ready(function () {
            var apiDataList = [];
            function updateTotalValue() {
                var totalValue = 0.00;
                $(apiDataList).each(function () {
                    totalValue += Number(this.DelValue);
                });
                $('#total-value').html(totalValue.toFixed(2));
                console.log('totalValue',totalValue);
            }
            $('#datatable').DataTable();
            $('#submit-btn').on('click', function () {
                $.post("@Url.Action("SaveApiData", "Sales")", { apiDataList: apiDataList }, function (result) {
                    if (result) {
                        console.log(result)
                        console.log(result);
                        if (result > 0) {
                            Swal.fire(
                                'Success!',
                                'Save Successful',
                                'success'
                            );
                        }
                        } else {
                            Swal.fire(
                                'Failed!',
                                'Failed To Do the operation',
                                'danger'
                            );
                        }
                });
            });

            //// Listen to changes on the checkboxes
            //$('.selected').change(function () {
            //    var total = 0;
            //    // Loop through all selected checkboxes
            //    $('.selected:checked').each(function () {
            //        // Get the invoice value for the corresponding row
            //        var invoiceValue = parseFloat($(this).closest('tr').find('.td-green[data-invoice-value]').data('invoice-value'));
            //        // Add it to the total
            //        total += invoiceValue;
            //    });
            //    // Display the total in the span element
            //    $('#totalInvoiceValue').text(total.toFixed(2));
            //});

            // Calculate total invoice value
            var totalInvoiceValue = 0;
            $('.selected').change(function () {
                if ($(this).is(':checked')) {
                    totalInvoiceValue += parseFloat($(this).closest('tr').data('invoice-value'));
                } else {
                    totalInvoiceValue -= parseFloat($(this).closest('tr').data('invoice-value'));
                }
                $('#totalInvoiceValue').text('Total Invoice Value: ' + totalInvoiceValue.toFixed(2));
            });


            $('#advise_btn').on('click', function () {
                @*window.open('@Url.Action("BondApprovedPi", "Sales")', '_blank');*@
                let bookings = []
                $('input[type=checkbox]').each(function () {
                    if ($(this).is(":checked")) {
                        bookings.push($(this).attr('data-booking-no'));
                    }
                });
                $.post("@Url.Action("LoadPiAdvisingDataPartial", "Sales")", { bookings: bookings }, function (result) {
                    if (result) {
                        //console.log(result)
                            //console.log(result);
                            $('.pi-modal-content').empty();
                            $('.pi-modal-content').html(result);
                            $('.pi-advise-modal').modal('show');
                        } else {
                            Swal.fire(
                                'Failed!',
                                'Failed To Do the operation',
                                'danger'
                            );
                        }
                });

             

            });
            //changes for search
            var table = $('#datatable').DataTable({
                "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
                "order": [[1, "desc"]]
            });

            // Add search functionality for Customer Name
            $('#customerName').on('keyup', function () {
                table.column(5).search(this.value).draw();
            });

         

            // Add search functionality for Retailer Name
            $('#retailerName').on('keyup', function () {
                table.column(12).search(this.value).draw();
            });

            // Add search functionality for Category Name
            $('#categoryName').on('keyup', function () {
                table.column(6).search(this.value).draw();
            });

            //// Select all button
            //$('#select-all-btn').click(function () {
            //    $('#datatable .selected:not(:checked)').click();
            //});

            //// Clear all button
            //$('#clear-all-btn').click(function () {
            //    $('#datatable .selected:checked').click();
            //});

            //// Listen for change event on checkboxes in Table A
            //$('#datatable').on('change', '.selected', function () {
            //    var $row = $(this).closest('tr'); // Get the parent row of the checkbox
            //    if ($(this).is(':checked')) {
            //        // Add the row to Table B
            //        apiDataList.push({
            //            'BookingNo': $(this).closest('tr').find('.BookingNo').val(),
            //            'InvoiceQty': Number($(this).closest('tr').find('.InvoiceQty').val()),
            //            'DelValue': $(this).closest('tr').find('.DelValue').val()
            //        });
            //        //console.log(apiDataList);
            //        updateTotalValue();
            //        $('#added-bookings-form tbody').append($row.clone().find('.selected').remove().end());
            //    } else {
            //        // Remove the row from Table B
            //        var bookingNo = $row.find('.selected').data('booking-no');
            //        apiDataList = apiDataList.filter(function (item) {
            //            return item.BookingNo !== bookingNo;
            //        });
            //        $('#added-bookings-form tbody').find('tr:contains(' + bookingNo + ')').remove();
            //        updateTotalValue();
            //    }
            //});

            // Select All button
            $('#select-all-btn').click(function () {
                $('.selected:visible').prop('checked', true);
                $('.selected:visible').trigger('change');
            });

            // Clear All button
            $('#clear-all-btn').click(function () {
                $('#addedTable tbody tr').remove();
                $('.selected').prop('checked', false);
                var selectedRows = $('.selected:checked');
                if (selectedRows.length > 0) {
                    var totalInvoiceValue = parseFloat($('#totalInvoiceValue').text().replace('Total Invoice Value: ', ''));
                    selectedRows.each(function () {
                        totalInvoiceValue -= parseFloat($(this).closest('tr').data('invoice-value'));
                    });
                    $('#totalInvoiceValue').text('Total Invoice Value: ' + totalInvoiceValue.toFixed(2));
                }
            });

            // Listen for change event on checkboxes in Table A
            $('#datatable').on('change', '.selected', function () {
                var $row = $(this).closest('tr');  // Get the parent row of the checkbox
                if ($(this).is(':checked')) {
                    // Add the row to Table B
                    apiDataList.push({
                        'BookingNo': $(this).closest('tr').find('.BookingNo').val(),
                        'InvoiceQty': Number($(this).closest('tr').find('.InvoiceQty').val()),
                        'DelValue': $(this).closest('tr').find('.DelValue').val()
                    });
                    //console.log(apiDataList);
                    updateTotalValue();
                    $('#added-bookings-form tbody').append($row.clone().find('.selected').remove().end());
                } else {
                    // Remove the row from Table B
                    apiDataList = apiDataList.filter(function (el) {
                        return el.BookingNo !== $row.find('.selected').data('booking-no');
                    });
                    var bookingNo = $row.find('.selected').data('booking-no');
                    $('#added-bookings-form tbody').find('tr:contains(' + bookingNo + ')').remove();
                    updateTotalValue();
                }
            });

            // Listen for change event on rep filter dropdown
            $('#rep-filter').on('change', function () {
                var rep = $(this).val();
                $("#datatable tbody tr").each(function () {
                    var rowRep = $(this).find(".repName").text();
                    if (!rep || rowRep === rep) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
                $('.selected:visible').trigger('change');
            });




            
        });</script>
}