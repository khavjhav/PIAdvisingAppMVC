@model  IEnumerable<PIAdvisingApp.ViewModels.AdvisePiFromRepResult>


<style>
    /* Add CSS styles for sticky table headers */
    .table-responsive {
        overflow-x: auto;
    }

    .table-sticky-header thead th {
        position: sticky;
        top: 0;
        z-index: 1;
        background-color: #fff;
    }
</style>

 @*Add the filter dropdowns*@ 
<div class="row">
    <div class="col-lg-4">
        <div class="main-card mb-4 card">
            <div class="card-body p-4">
 @*Product Type Filter*@ 
<div class="row mb-2">
    <div class="col-md-2">
        <label for="product-type-filter" class="mb-1" style="font-size: 10px;">Product Type:</label>
    </div>
    <div class="col-md-10">
        <select id="product-type-filter" class="form-control form-control-sm">
            <option value="">All</option>
            @foreach (var category in ViewBag.ProductTypes)
            {
                <option value="@category">@category</option>
            }
        </select>
    </div>
</div>
 @*Retailer Filter*@ 
<div class="row mb-2">
    <div class="col-md-2">
        <label for="retailer-filter" class="mb-1" style="font-size: 10px;">Retailer:</label>
    </div>
    <div class="col-md-10">
        <select id="retailer-filter" class="form-control form-control-sm">
            <option value="All">All</option>
            @foreach (var retailer in ViewBag.Retailers)
            {
                <option value="@retailer">@retailer</option>
            }
        </select>
    </div>
</div>
    @*Advise Status Filter*@ 
<div class="row mb-2">
    <div class="col-md-2">
        <label for="status-filter" class="mb-1" style="font-size: 10px;">Advise Status:</label>
    </div>
    <div class="col-md-10">
        <select id="status-filter" class="form-control form-control-sm">
            <option value="All">All</option>
            @foreach (var status in ViewBag.AdviseStatus)
            {
                <option value="@status">@status</option>
            }
        </select>
    </div>
</div>
 @*Beneficiary Filter*@ 
<div class="row mb-2">
    <div class="col-md-2">
        <label for="company-filter" class="mb-1" style="font-size: 10px;">Beneficiary:</label>
    </div>
    <div class="col-md-10">
        <select id="company-filter" class="form-control form-control-sm">
            <option value="All">All</option>
            @foreach (var company in ViewBag.CompanyNames)
            {
                <option value="@company">@company</option>
            }
        </select>
    </div>
</div>
 @*Contact Person Filter*@ 
<div class="row mb-2">
                <div class="col-md-2">
                    <label for="contact-filter" class="mb-1" style="font-size: 10px;">Contact Person:</label>
                </div>
                <div class="col-md-10">
                    <select id="contact-filter" class="form-control form-control-sm">
                        <option value="">All</option>
                        @foreach (var contact in ViewBag.ContactPersons)
                        {
                            <option value="@contact">@contact</option>
                        }
                    </select>
                </div>
            </div>
        </div>
    </div>
</div>


    </div>



<div class="main-card mb-1 card p-1">
    <div class="card-body p-1">
        <h5 class="card-title">Booking List</h5>
        <div class="table-responsive">
            <table id="booking-list-table" class="mb-0 table table-sm table-bordered table-sticky-header">
                <thead>
                    @{ int rowNo = 1;}
                    <tr>
                        <th class="text-center d-none">SL</th>
                        <th><input class="select-all m-2" type="checkbox" /></th>
                        <th class="text-center">Booking No</th>
                        <th class="text-center d-none">Booking Id</th>
                        <th class="text-center">Booking Date</th>
                        <th class="text-center">PI Status</th>
                        <th class="text-center">Advise Status</th>
                        <th class="text-center d-none">Customer Name</th>
                        <th class="text-center d-none">Representative Name</th>
                        <th class="text-center d-none">Short Name</th>
                        <th class="text-center">Booking Qty</th>
                        <th class="text-center">Booking Value</th>
                        <th class="text-center">LC Balance</th>
                        <th class="text-center">Retailer Name</th>
                        <th class="text-center">Contact Person</th>
                        <th class="text-center">Delivery (%)</th>
                        <th class="text-center d-none">Category Name</th>
                        <th class="text-center d-none">Company Name</th>
                        <th class="text-center d-none">Company Name</th>
                        @*<th class="text-center d-none">Representative ID</th>*@
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr data-retailer-id="@item.RetailerId">
                            <td class="text-center d-none">@rowNo </td>
                            <td class="text-center"><input class="selected-item" type="checkbox" name="selectedItems" value="@item.BookingId" /></td>
                            <td class="text-center BookingNo">@item.BookingNo</td>

                            <td class="text-center BookingId  d-none">@item.BookingId</td>
                            <td class="text-center BookingDate">@item.BookingDate.ToString("dd-MMM-yy")</td>
                            <td class="text-center PIStatus">@item.PIStatus</td>
                            <td class="text-center AdviseStatus">@item.AdviseStatus</td>
                            <td class="text-center d-none CustomerName">@item.CustomerName</td>
                            <td class="text-center d-none RepresentativeName">@item.RepresentativeName</td>
                            <td class="text-center d-none ShortName">@item.ShortName</td>
                            @*<td class="text-center BookingQty">@item.BookingQty</td>*@
                            @MyHelpers.FinancialNumberRoundedTd(item.BookingQty, "td-green text-center BookingQty")
                            @MyHelpers.FinancialNumberRoundedTd(item.BookingValue, "td-green text-center BookingValue")
                            @MyHelpers.FinancialNumberRoundedTd(item.LCBalance, "td-green text-center LCBalance")
                            <td class="text-center RetailerName">@item.RetailerName</td>
                            <td class="text-center ContactName">@item.ContactName</td>
                            @*<td class="text-center DeliveryPercentage">@item.DeliveryPercentage</td>  *@
                            @MyHelpers.FinancialNumberRoundedTd(item.DeliveryPercentage, "td-green text-center DeliveryPercentage")
                            <td class="text-center d-none CategoryName">@item.CategoryName</td>
                            <td class="text-center d-none CompanyName">@item.CompanyName</td>
                            <td class="text-center d-none RepresentativeId">@item.RepresentativeId</td>

                        </tr>
                        rowNo++;
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>




<script>
    // Move the DataTable initialization to the end of the script block
    $(document).ready(function () {
        // Initialize the DataTable
        //var table = $('#booking-list-table').DataTable();
        var table = $('#booking-list-table').DataTable({
            "columnDefs": [{
                "targets": [0, 2, 3, 6, 7, 8], // Add the column indices that you don't want to be searchable
                "searchable": false
            }]
        });


        // Filter event handler for product type
        $('#product-type-filter').on('change', function () {
            var categoryFilter = $(this).val();
            console.log('Product Type Filter Value:', categoryFilter);
            table.column(16).search(categoryFilter).draw();
        });
        // Filter event handler for status type
        $('#status-filter').on('change', function () {
            var statusFilter = $(this).val();
            console.log('Advise Status Filter Value:', statusFilter);
            table.column(6).search(statusFilter).draw();
        });

      
        // Custom filtering function for retailer
        function filterRetailer(retailerFilter) {
            if (retailerFilter === "All") {
                table.column(13).search("").draw(); // Show all data for "Retailer Name" column
            } else {
                // Use custom filtering function for case-insensitive match
                table.column(13).search(
                    '^' + retailerFilter.replace(/[.*+?^${}()|[\]\\]/g, '\\$&') + '$',
                    true, false
                ).draw();
            }
        }

        // Filter event handler for retailer
        $('#retailer-filter').on('change', function () {
            var retailerFilter = $(this).val();
            console.log('Retailer Filter Value:', retailerFilter);
            filterRetailer(retailerFilter);
        });

        // Filter event handler for contact
        $('#contact-filter').on('change', function () {
            var contactFilter = $(this).val();
            console.log('Contact Filter Value:', contactFilter);
            table.column(14).search(contactFilter).draw();
        });


        // Custom filtering function for company
        function filterCompany(companyFilter) {
            if (companyFilter === "All") {
                table.column(17).search("").draw(); // Show all data for "Company Name" column
            } else {
                // Use custom filtering function for case-insensitive match
                table.column(17).search(
                    '^' + companyFilter.replace(/[.*+?^${}()|[\]\\]/g, '\\$&') + '$',
                    true, false
                ).draw();
            }
        }

        // Filter event handler for company
        $('#company-filter').on('change', function () {
            var companyFilter = $(this).val();
            console.log('Company Filter Value:', companyFilter);
            filterCompany(companyFilter);
        });
    });

    $('.select-all').click(function () {
        if ($(this).is(':checked')) {
            $('.selected-item').prop('checked', true);
        } else {
            $('.selected-item').prop('checked', false);
        }
        //trigger selected-item onchange
        $('.selected-item').trigger('change');
    });
</script>



