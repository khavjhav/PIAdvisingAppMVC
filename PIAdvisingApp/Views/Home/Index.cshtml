@model IEnumerable<PIAdvisingApp.ViewModels.DashboardViewModel>
@{
    ViewBag.Title = "Home Page";
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>

<style>
</style>


<div class="jumbotron">
    <h1>PI Advising</h1>
    <p class="lead">Welcome to PI Advising Web App.</p>

</div>
<div>
    <canvas id="customerChart"></canvas>
</div>

<script>
    // Extract customer and data from ViewBag
    var customerData = @Html.Raw(Json.Encode(ViewBag.CustomerData));
    console.log(customerData); // Check the contents of customerData

    // Extracting customer names for labels
    var customerNames = customerData?.map(item => item.CustomerName);
    console.log(customerNames); // Check the contents of customerData
   
    // Extracting booking values and LC balances for datasets
    var bookingValues = customerData?.map(item => item.TotalBookingVal);
    console.log(bookingValues); // Check the contents of customerData
    var lcBalances = customerData?.map(item => item.Totallcbalance);
    console.log(lcBalances); // Check the contents of customerData

    var ctx = document.getElementById('customerChart').getContext('2d');
    var chart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: customerNames,
            datasets: [
                {
                    label: 'Booking Value',
                    backgroundColor: 'blue',
                    data: bookingValues
                },
                {
                    label: 'LC Balance',
                    borderColor: 'red',
                    data: lcBalances,
                    type: 'line'
                }
            ]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>
