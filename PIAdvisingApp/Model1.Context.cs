//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PIAdvisingApp
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SalesCubeSepEntities : DbContext
    {
        public SalesCubeSepEntities()
            : base("name=SalesCubeSepEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BookingMain> BookingMains { get; set; }
        public virtual DbSet<BookingSub> BookingSubs { get; set; }
        public virtual DbSet<CompanyInfo> CompanyInfoes { get; set; }
        public virtual DbSet<CustomerGenInfo> CustomerGenInfoes { get; set; }
        public virtual DbSet<CustomerRepInfo> CustomerRepInfoes { get; set; }
        public virtual DbSet<InvoiceMain> InvoiceMains { get; set; }
        public virtual DbSet<InvoiceSub> InvoiceSubs { get; set; }
        public virtual DbSet<PIMain> PIMains { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductCategory> ProductCategories { get; set; }
        public virtual DbSet<Representative> Representatives { get; set; }
        public virtual DbSet<Retailer> Retailers { get; set; }
        public virtual DbSet<PISub> PISubs { get; set; }
        public virtual DbSet<QuedOrderDetail> QuedOrderDetails { get; set; }
        public virtual DbSet<UserMenuPermission> UserMenuPermissions { get; set; }
        public virtual DbSet<vDN> vDNs { get; set; }
        public virtual DbSet<viewBankBranch> viewBankBranches { get; set; }
        public virtual DbSet<viewBillAddress> viewBillAddresses { get; set; }
        public virtual DbSet<viewBindingType> viewBindingTypes { get; set; }
        public virtual DbSet<viewBleachCharge> viewBleachCharges { get; set; }
        public virtual DbSet<viewBookingDetail> viewBookingDetails { get; set; }
        public virtual DbSet<viewButtonHole> viewButtonHoles { get; set; }
        public virtual DbSet<viewButtonLine> viewButtonLines { get; set; }
        public virtual DbSet<viewClauseDetail> viewClauseDetails { get; set; }
        public virtual DbSet<viewCollectionType> viewCollectionTypes { get; set; }
        public virtual DbSet<viewCompanyAccount> viewCompanyAccounts { get; set; }
        public virtual DbSet<viewCustomerClass> viewCustomerClasses { get; set; }
        public virtual DbSet<viewCustomerProfile> viewCustomerProfiles { get; set; }
        public virtual DbSet<viewCustomerType> viewCustomerTypes { get; set; }
        public virtual DbSet<viewDeliveryPriority> viewDeliveryPriorities { get; set; }
        public virtual DbSet<viewEditReceiveMode> viewEditReceiveModes { get; set; }
        public virtual DbSet<viewElasticType> viewElasticTypes { get; set; }
        public virtual DbSet<viewEmailList> viewEmailLists { get; set; }
        public virtual DbSet<viewGSMList> viewGSMLists { get; set; }
        public virtual DbSet<viewHangerColor> viewHangerColors { get; set; }
        public virtual DbSet<viewMaterialList> viewMaterialLists { get; set; }
        public virtual DbSet<viewMeasurementUnit> viewMeasurementUnits { get; set; }
        public virtual DbSet<viewMonthPAvgPrice> viewMonthPAvgPrices { get; set; }
        public virtual DbSet<viewNSDInfo> viewNSDInfoes { get; set; }
        public virtual DbSet<ViewOIBillPaymentData> ViewOIBillPaymentDatas { get; set; }
        public virtual DbSet<viewPaperCombination> viewPaperCombinations { get; set; }
        public virtual DbSet<viewPaperType> viewPaperTypes { get; set; }
        public virtual DbSet<viewPaymentMode> viewPaymentModes { get; set; }
        public virtual DbSet<viewPIType> viewPITypes { get; set; }
        public virtual DbSet<viewQuantityUnit> viewQuantityUnits { get; set; }
        public virtual DbSet<viewQuedConfrimOrderDetail> viewQuedConfrimOrderDetails { get; set; }
        public virtual DbSet<viewQuedOrderDetail> viewQuedOrderDetails { get; set; }
        public virtual DbSet<viewQuedOrderDetailsWeb> viewQuedOrderDetailsWebs { get; set; }
        public virtual DbSet<viewReceiveMode> viewReceiveModes { get; set; }
        public virtual DbSet<viewRepresentativeType> viewRepresentativeTypes { get; set; }
        public virtual DbSet<viewSalesRepWisePBI> viewSalesRepWisePBIs { get; set; }
        public virtual DbSet<viewSealing> viewSealings { get; set; }
        public virtual DbSet<ViewSLPNProd> ViewSLPNProds { get; set; }
        public virtual DbSet<ViewSLPNScedule> ViewSLPNScedules { get; set; }
        public virtual DbSet<VIewSlpSale> VIewSlpSales { get; set; }
        public virtual DbSet<viewUDAuthority> viewUDAuthorities { get; set; }
        public virtual DbSet<viewUserType> viewUserTypes { get; set; }
        public virtual DbSet<viewWashType> viewWashTypes { get; set; }
        public virtual DbSet<vtest> vtests { get; set; }
    
        public virtual int PrcLCNotReceived(string fromDate, string toDate, Nullable<int> productCatId, Nullable<int> locationId, Nullable<int> customerId, Nullable<int> repId, Nullable<int> teamId, string contractName, Nullable<int> userID, Nullable<int> retailerId)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var productCatIdParameter = productCatId.HasValue ?
                new ObjectParameter("ProductCatId", productCatId) :
                new ObjectParameter("ProductCatId", typeof(int));
    
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var repIdParameter = repId.HasValue ?
                new ObjectParameter("RepId", repId) :
                new ObjectParameter("RepId", typeof(int));
    
            var teamIdParameter = teamId.HasValue ?
                new ObjectParameter("TeamId", teamId) :
                new ObjectParameter("TeamId", typeof(int));
    
            var contractNameParameter = contractName != null ?
                new ObjectParameter("ContractName", contractName) :
                new ObjectParameter("ContractName", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var retailerIdParameter = retailerId.HasValue ?
                new ObjectParameter("RetailerId", retailerId) :
                new ObjectParameter("RetailerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcLCNotReceived", fromDateParameter, toDateParameter, productCatIdParameter, locationIdParameter, customerIdParameter, repIdParameter, teamIdParameter, contractNameParameter, userIDParameter, retailerIdParameter);
        }
    }
}
